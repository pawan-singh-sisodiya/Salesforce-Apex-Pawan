

Requirements-
            1. Visualforce page as PDF
			2. Send it on user's email
			
			First of all you need to create an lightning web component, you have to add a action button and bind this component.
			
			
			*********************************************************************************************************************************

 Visualforce page  =>
 
            <apex:page applyHtmlTag="false" showHeader="false" controller="SalesReport" renderAs="pdf" standardStylesheets="false"
           applyBodyTag="false">
    <head>
        <style>
            @page {
            size: A4 portrait;
            margin: 3mm;
            }
            
            body {
            font-family: sans-serif;
            font-size: 11pt;
            }
            th {
            min-height: 15px;
            max-height: auto;
            background:#ddd;
            }
            td {
            min-height: 15px;
            max-height: auto;
            }
        </style>
    </head>
    <body>
        <h1>
            Sale Unit Bill AutoGenerated Recept
        </h1> 
        <br/>
        <p>
          Customer Name : {!salesObj.Name}
        </p>
        <p>
            {!salesObj.Name}
        </p>
        <br/>
        <table border="1" cellspacing="0" cellpadding="10" style="width: 100%; border-collapse: collapse; border-color: #000; text-align:left;">
            <thead>
                <tr> 
                    <th>Tender</th>
                    <th>Purchase_Date</th>
                    <th>Sale_Machine_type</th>
                    <th>SaleUnites</th>
                </tr>     
            </thead>
            <apex:repeat value="{!salesObj}" var="accItem"> 
                <tr width="100%" style="text-align: center;">
                    <td style="text-align:left;"><apex:outputText value="{!salesObj.Name}"/></td>
                    <td style="text-align:left;"><apex:outputText value="{!salesObj.Tender__c}"/></td>
                    <td style="text-align:left;"><apex:outputText value="{!salesObj.Purchase_Date__c}"/></td>
                    <td style="text-align:left;"><apex:outputText value="{!salesObj.Sale_Machine_type__c}"/></td>
                    <td style="text-align:left;"><apex:outputText value="{!salesObj.SaleUnites__c}"/></td>
                </tr>  
            </apex:repeat>  
        </table>   
    </body>        
</apex:page>
 
 
 *********************************************************************************************************************************
 
 Controller for visualforce(PDF) =>
 
 
 public class SalesReport {

    public String mstrId{get;set;}
    public Sales__c salesObj{get;set;}
    
    public SalesReport(){
        mstrId = ApexPages.currentPage().getParameters().get('id');
        
        salesObj = [SELECT Id, Name, Tender__c, Purchase_Date__c, Sale_Machine_type__c, SaleUnites__c FROM Sales__c WHERE Id =: mstrId];
        System.debug('salesObj -- '+ salesObj);
    }
}


*********************************************************************************************************************************

Controller for email =>

public class SendEmail {
    
    @AuraEnabled
    public static void SendEmailMethod(Id localId){
        
        Sales__c inv = [Select Id, Owner.Email, name From Sales__c Where Id=:localId];
        PageReference pdf = page.SalesVf;// Replace PdfOfInvoice with your Page which render as PDF.
        pdf.getParameters().put('id', localId);
        // Blob b = pdf.getContentAsPDF();
        Blob b;
        if (Test.IsRunningTest()){b=Blob.valueOf('UNIT.TEST');}else{b = pdf.getContentAsPDF();}
        // Create Attachment Object to attach with Email
        Messaging.EmailFileAttachment efa = new Messaging.EmailFileAttachment();
        efa.setFileName(inv.Name+'.pdf');
        
        efa.setBody(b);
        // Define the email
        Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
        // Sets the paramaters of the email
        email.setSubject('PDF of sales unit - '+inv.Name);
        email.setToAddresses( new List<String>{inv.Owner.Email} );
        //email.setbccAddresses( new List<String>{'admin@gmail.com'} );
        email.sethtmlBody('Hi '+inv.Name+',<br/><br/> '
                          +'Please find the attached sales units.'
                          +'<br/><br/>'+'Thanks,'+'<br/>'
                          +UserInfo.getName()+'<br/>'
                          +UserInfo.getOrganizationName());
        email.setFileAttachments(new Messaging.EmailFileAttachment[] {efa});
        
        try{
            Messaging.SendEmailResult [] result = Messaging.sendEmail(new Messaging.SingleEmailMessage[] {email});
        }catch(System.Exception e){
            
        }
    }
}

*********************************************************************************************************************************

Lightning web component HTML => 


   <template>
    <lightning-card  variant="Narrow"  title="Hello" icon-name="standard:account">
       
        <div if:false={viewButton}>
        <lightning-button style="margin-left: 1rem;" label="View Invoice" onclick={onhandleClickView}></lightning-button> 
        </div> 
        <div if:true={viewButton}>    
        <iframe src={url} width="100%" height="500px;"></iframe>
        </div>
        <div if:false={viewButton}>
        <lightning-button style="margin-left: 3rem;" label="Send Email" onclick={onhandleClickSendEmail}></lightning-button>
        </div>
    </lightning-card>
      
</template>

*********************************************************************************************************************************

JS =>


import { api, LightningElement, track, wire } from 'lwc';

import salesRecords from "@salesforce/apex/SalesReportPdfController.billRecords";
import salesforceEmail from '@salesforce/apex/SendEmail.SendEmailMethod';

export default class SalesReport extends LightningElement {


    @track viewButton = false;
    @track emailButton = false;
    @api 
    recordId;
    
    url;
        onhandleClickView(){
            console.log('this.url ' ,this.url);
            this.url='https://kumetrider3-dev-ed--c.vf.force.com/apex/SalesVf?id=' + this.recordId;
    
            console.log('this.url ' ,this.url);
            this.viewButton=true;
        }
        onhandleClickSendEmail(){
            this.emailButton = true;

            salesforceEmail({localId: this.recordId}).then(res=>{

            }).catch(error=>{
                console.log('error found',error);
            });
        }
 
}

